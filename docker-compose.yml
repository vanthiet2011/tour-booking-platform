services:
  #---------------------------------
  # INFRASTRUCTURE SERVICES
  #---------------------------------
  auth_db:
    image: postgres:14-alpine
    container_name: auth_db
    restart: always
    environment:
      - POSTGRES_DB=AuthDb
      - POSTGRES_USER=your_user
      - POSTGRES_PASSWORD=your_password
    ports:
      - "5432:5432" # Port for AuthService
    volumes:
      - auth_data:/var/lib/postgresql/data

  user_db:
    image: postgres:14-alpine
    container_name: user_db
    restart: always
    environment:
      - POSTGRES_DB=UserDb
      - POSTGRES_USER=your_user
      - POSTGRES_PASSWORD=your_password
    ports:
      - "5433:5432" # Port for UserService
    volumes:
      - user_data:/var/lib/postgresql/data

  tour_db:
    image: postgres:14-alpine
    container_name: tour_db
    restart: always
    environment:
      - POSTGRES_DB=TourDb
      - POSTGRES_USER=your_user
      - POSTGRES_PASSWORD=your_password
    ports:
      - "5434:5432" # Port for TourService
    volumes:
      - tour_data:/var/lib/postgresql/data

  booking_db:
    image: postgres:14-alpine
    container_name: booking_db
    restart: always
    environment:
      - POSTGRES_DB=BookingDb
      - POSTGRES_USER=your_user
      - POSTGRES_PASSWORD=your_password
    ports:
      - "5435:5432" # Port for BookingService
    volumes:
      - booking_data:/var/lib/postgresql/data

  payment_db:
    image: postgres:14-alpine
    container_name: payment_db
    restart: always
    environment:
      - POSTGRES_DB=PaymentDb
      - POSTGRES_USER=your_user
      - POSTGRES_PASSWORD=your_password
    ports:
      - "5436:5432" # Port for PaymentService
    volumes:
      - payment_data:/var/lib/postgresql/data

  redis_cache:
    image: redis:6-alpine
    container_name: redis_cache
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  #---------------------------------
  # APPLICATION SERVICES
  #---------------------------------
  frontend:
    build:
      context: ./frontend/my-app
      dockerfile: Dockerfile
      target: prod
    container_name: nextjs-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    restart: unless-stopped

  auth-service:
    build:
      context: ./backend/AuthService
      dockerfile: Dockerfile
      target: final
    container_name: auth-service
    ports:
      - "5001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__Default=Host=auth_db;Port=5432;Database=AuthDb;Username=your_user;Password=your_password
    depends_on:
      - auth_db

  user-service:
    build:
      context: ./backend/UserService
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "5002:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Default=Host=user_db;Port=5432;Database=UserDb;Username=your_user;Password=your_password
    depends_on:
      - user_db

  tour-service:
    build:
      context: ./backend/TourService
      dockerfile: Dockerfile
    container_name: tour-service
    ports:
      - "5003:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Default=Host=tour_db;Port=5432;Database=TourDb;Username=your_user;Password=your_password
    depends_on:
      - tour_db

  booking-service:
    build:
      context: ./backend/BookingService
      dockerfile: Dockerfile
    container_name: booking-service
    ports:
      - "5004:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Default=Host=booking_db;Port=5432;Database=BookingDb;Username=your_user;Password=your_password
    depends_on:
      - booking_db

  payment-service:
    build:
      context: ./backend/PaymentService
      dockerfile: Dockerfile
    container_name: payment-service
    ports:
      - "5005:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Default=Host=payment_db;Port=5432;Database=PaymentDb;Username=your_user;Password=your_password
    depends_on:
      - payment_db

volumes:
  auth_data:
  user_data:
  tour_data:
  booking_data:
  payment_data:
  redis_data:
  node_modules_cache:
